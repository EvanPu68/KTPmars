load_all()
library(devtools)
load_all()
use_gpl3_license()
document()
use_package("stats")
document()
usethis::use_vignette("mars")
document()
usethis::use_testthat()
usethis::use_data_raw("marstestdata")
## code to prepare `marstestdata` dataset goes here
# Refer to STAT 360, Lecture 9 exercise solution by Becky Lin
set.seed(123)
# Parameters
N <- 100; n <- 10
knot1 <- -0.5; knot2 <- 0; knot3 <- 0.5
beta1 <- 3; beta2 <- 5
error.SD <- 0.1
# Simulate x's
x <- matrix(rnorm(N*n),ncol=n)
# Simulate response variable
h <- function(x,s,t) {
return(pmax(0,s*(x-t)))
}
lin.pred <- beta1*h(x[,1],+1,knot1) + beta2*h(x[,2],-1,knot2)*h(x[,1],+1,knot3)
y <- lin.pred + rnorm(n,sd=error.SD)
# Package response and explanatory variables as a data frame
marstestdata <- data.frame(cbind(y,x))
names(marstestdata) <- c("y",paste0("x",1:n))
usethis::use_data(marstestdata, overwrite = TRUE)
load_all(0)
load_all()
document()
test()
load_all()
test()
test()
load_all()
library(devtools)
install_github("EvanPu68/KTPmars")
load_all()
library(KTPmars)
library(KTPmars)
mc <- mars.control(Mmax = 10)
concrete <-mars(ConcreteCompressiveStrength~.,data=concrete,control = mc)
toxic <-mars(LC50~.,data=fishToxicity, control = mc)
yacht <-mars(RRPUWOD~.,data=yacht, control = mc)
summary(concrete)
summary(toxic)
summary(yacht)
load_all()
library(devtools)
load_all()
library(KTPmars)
library(KTPmars)
detach("package:KTPmars", unload = TRUE)
library(KTPmars)
yacht <-mars(RRPUWOD~.,data=yacht, control = mc)
library(KTPmars)
detach("package:KTPmars", unload = TRUE)
library(KTPmars)
remove.packages("KTPmars")
library(KTPmars)
library(devtools)
library(KTPmars)
load_all()
library(KTPmars)
library(KTPmars)
install_github("EvanPu68/KTPmars")
